//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestService.iLibraryService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MachineOnline", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum MachineOnline : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Online = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MachineOnlineStateResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class MachineOnlineStateResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MachineProcessingState", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum MachineProcessingState : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Initial = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Idle = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Setup = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ready = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Execute = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pause = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LotSetUp = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Maintenance = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateMachineStateResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class UpdateMachineStateResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SetupLotResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class SetupLotResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestService.iLibraryService.SetupLotResult.Status IsPassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestService.iLibraryService.SetupLotResult.Status IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Recipe {
            get {
                return this.RecipeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipeField, value) != true)) {
                    this.RecipeField = value;
                    this.RaisePropertyChanged("Recipe");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="SetupLotResult.Status", Namespace="http://schemas.datacontract.org/2004/07/")]
        public enum Status : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Pass = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NotPass = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Warning = 2,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StartLotResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class StartLotResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Judge", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum Judge : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NG = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateFirstinspectionResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class UpdateFirstinspectionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndLotResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class EndLotResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateFinalinspectionResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class UpdateFinalinspectionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MachineAlarmResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class MachineAlarmResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancelLotResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class CancelLotResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReinputResult", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class ReinputResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CauseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cause {
            get {
                return this.CauseField;
            }
            set {
                if ((object.ReferenceEquals(this.CauseField, value) != true)) {
                    this.CauseField = value;
                    this.RaisePropertyChanged("Cause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPass {
            get {
                return this.IsPassField;
            }
            set {
                if ((this.IsPassField.Equals(value) != true)) {
                    this.IsPassField = value;
                    this.RaisePropertyChanged("IsPass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="iLibraryService.IServiceiLibrary")]
    public interface IServiceiLibrary {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/MachineOnlineState", ReplyAction="http://tempuri.org/IServiceiLibrary/MachineOnlineStateResponse")]
        TestService.iLibraryService.MachineOnlineStateResult MachineOnlineState(string mcNo, TestService.iLibraryService.MachineOnline online);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/UpdateMachineState", ReplyAction="http://tempuri.org/IServiceiLibrary/UpdateMachineStateResponse")]
        TestService.iLibraryService.UpdateMachineStateResult UpdateMachineState(string mcNo, TestService.iLibraryService.MachineProcessingState state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/SetupLot", ReplyAction="http://tempuri.org/IServiceiLibrary/SetupLotResponse")]
        TestService.iLibraryService.SetupLotResult SetupLot(string lotNo, string mcNo, string opNo, string processName, string package);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/StartLot", ReplyAction="http://tempuri.org/IServiceiLibrary/StartLotResponse")]
        TestService.iLibraryService.StartLotResult StartLot(string lotNo, string mcNo, string opNo, string recipe, string package);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/UpdateFirstinspection", ReplyAction="http://tempuri.org/IServiceiLibrary/UpdateFirstinspectionResponse")]
        TestService.iLibraryService.UpdateFirstinspectionResult UpdateFirstinspection(string lotNo, string opNo, TestService.iLibraryService.Judge judge, string mcNo, string package);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/EndLot", ReplyAction="http://tempuri.org/IServiceiLibrary/EndLotResponse")]
        TestService.iLibraryService.EndLotResult EndLot(string lotNo, string mcNo, string opNo, int good, int ng, string package);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/UpdateFinalinspection", ReplyAction="http://tempuri.org/IServiceiLibrary/UpdateFinalinspectionResponse")]
        TestService.iLibraryService.UpdateFinalinspectionResult UpdateFinalinspection(string lotNo, string opNo, TestService.iLibraryService.Judge judge, string mcNo, string package);
        
        // CODEGEN: Generating message contract since element name alarm from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/MachineAlarm", ReplyAction="http://tempuri.org/IServiceiLibrary/MachineAlarmResponse")]
        TestService.iLibraryService.MachineAlarmResponse MachineAlarm(TestService.iLibraryService.MachineAlarmRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/CancelLot", ReplyAction="http://tempuri.org/IServiceiLibrary/CancelLotResponse")]
        TestService.iLibraryService.CancelLotResult CancelLot(string mcNo, string lotNo, string opNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/Reinput", ReplyAction="http://tempuri.org/IServiceiLibrary/ReinputResponse")]
        TestService.iLibraryService.ReinputResult Reinput(string lotNo, string mcNo, string opNo, int good, int ng);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceiLibrary/ReinputAndHoldLot", ReplyAction="http://tempuri.org/IServiceiLibrary/ReinputAndHoldLotResponse")]
        TestService.iLibraryService.ReinputResult ReinputAndHoldLot(string lotNo, string mcNo, string opNo, int good, int ng);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MachineAlarmRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MachineAlarm", Namespace="http://tempuri.org/", Order=0)]
        public TestService.iLibraryService.MachineAlarmRequestBody Body;
        
        public MachineAlarmRequest() {
        }
        
        public MachineAlarmRequest(TestService.iLibraryService.MachineAlarmRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class MachineAlarmRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public string lotNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string mcNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string opNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string AlarmNo;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string alarm;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string package;
        
        public MachineAlarmRequestBody() {
        }
        
        public MachineAlarmRequestBody(string lotNo, string mcNo, string opNo, string AlarmNo, string alarm, string package) {
            this.lotNo = lotNo;
            this.mcNo = mcNo;
            this.opNo = opNo;
            this.AlarmNo = AlarmNo;
            this.alarm = alarm;
            this.package = package;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class MachineAlarmResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="MachineAlarmResponse", Namespace="http://tempuri.org/", Order=0)]
        public TestService.iLibraryService.MachineAlarmResponseBody Body;
        
        public MachineAlarmResponse() {
        }
        
        public MachineAlarmResponse(TestService.iLibraryService.MachineAlarmResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class MachineAlarmResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public TestService.iLibraryService.MachineAlarmResult MachineAlarmResult;
        
        public MachineAlarmResponseBody() {
        }
        
        public MachineAlarmResponseBody(TestService.iLibraryService.MachineAlarmResult MachineAlarmResult) {
            this.MachineAlarmResult = MachineAlarmResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceiLibraryChannel : TestService.iLibraryService.IServiceiLibrary, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceiLibraryClient : System.ServiceModel.ClientBase<TestService.iLibraryService.IServiceiLibrary>, TestService.iLibraryService.IServiceiLibrary {
        
        public ServiceiLibraryClient() {
        }
        
        public ServiceiLibraryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceiLibraryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceiLibraryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceiLibraryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestService.iLibraryService.MachineOnlineStateResult MachineOnlineState(string mcNo, TestService.iLibraryService.MachineOnline online) {
            return base.Channel.MachineOnlineState(mcNo, online);
        }
        
        public TestService.iLibraryService.UpdateMachineStateResult UpdateMachineState(string mcNo, TestService.iLibraryService.MachineProcessingState state) {
            return base.Channel.UpdateMachineState(mcNo, state);
        }
        
        public TestService.iLibraryService.SetupLotResult SetupLot(string lotNo, string mcNo, string opNo, string processName, string package) {
            return base.Channel.SetupLot(lotNo, mcNo, opNo, processName, package);
        }
        
        public TestService.iLibraryService.StartLotResult StartLot(string lotNo, string mcNo, string opNo, string recipe, string package) {
            return base.Channel.StartLot(lotNo, mcNo, opNo, recipe, package);
        }
        
        public TestService.iLibraryService.UpdateFirstinspectionResult UpdateFirstinspection(string lotNo, string opNo, TestService.iLibraryService.Judge judge, string mcNo, string package) {
            return base.Channel.UpdateFirstinspection(lotNo, opNo, judge, mcNo, package);
        }
        
        public TestService.iLibraryService.EndLotResult EndLot(string lotNo, string mcNo, string opNo, int good, int ng, string package) {
            return base.Channel.EndLot(lotNo, mcNo, opNo, good, ng, package);
        }
        
        public TestService.iLibraryService.UpdateFinalinspectionResult UpdateFinalinspection(string lotNo, string opNo, TestService.iLibraryService.Judge judge, string mcNo, string package) {
            return base.Channel.UpdateFinalinspection(lotNo, opNo, judge, mcNo, package);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestService.iLibraryService.MachineAlarmResponse TestService.iLibraryService.IServiceiLibrary.MachineAlarm(TestService.iLibraryService.MachineAlarmRequest request) {
            return base.Channel.MachineAlarm(request);
        }
        
        public TestService.iLibraryService.MachineAlarmResult MachineAlarm(string lotNo, string mcNo, string opNo, string AlarmNo, string alarm, string package) {
            TestService.iLibraryService.MachineAlarmRequest inValue = new TestService.iLibraryService.MachineAlarmRequest();
            inValue.Body = new TestService.iLibraryService.MachineAlarmRequestBody();
            inValue.Body.lotNo = lotNo;
            inValue.Body.mcNo = mcNo;
            inValue.Body.opNo = opNo;
            inValue.Body.AlarmNo = AlarmNo;
            inValue.Body.alarm = alarm;
            inValue.Body.package = package;
            TestService.iLibraryService.MachineAlarmResponse retVal = ((TestService.iLibraryService.IServiceiLibrary)(this)).MachineAlarm(inValue);
            return retVal.Body.MachineAlarmResult;
        }
        
        public TestService.iLibraryService.CancelLotResult CancelLot(string mcNo, string lotNo, string opNo) {
            return base.Channel.CancelLot(mcNo, lotNo, opNo);
        }
        
        public TestService.iLibraryService.ReinputResult Reinput(string lotNo, string mcNo, string opNo, int good, int ng) {
            return base.Channel.Reinput(lotNo, mcNo, opNo, good, ng);
        }
        
        public TestService.iLibraryService.ReinputResult ReinputAndHoldLot(string lotNo, string mcNo, string opNo, int good, int ng) {
            return base.Channel.ReinputAndHoldLot(lotNo, mcNo, opNo, good, ng);
        }
    }
}
